/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.challengercity.natora;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.io.*;
/**
 *
 * @author Ben
 */
public class LoginPanel extends javax.swing.JPanel {

    /**
     * Creates new form LoginPanel
     */
    public LoginPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        userBox = new javax.swing.JTextField();
        passBox = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        createAccount = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jCheckBox1 = new javax.swing.JCheckBox();
        recoverPassword = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/natora/resources/NatoraLogo.png"))); // NOI18N
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel1.setForeground(new java.awt.Color(187, 187, 187));
        jLabel1.setText("Username/Email:");

        userBox.setBackground(new java.awt.Color(11, 50, 7));
        userBox.setForeground(new java.awt.Color(255, 255, 255));
        userBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userBoxFocusGained(evt);
            }
        });

        passBox.setBackground(new java.awt.Color(11, 50, 7));
        passBox.setForeground(new java.awt.Color(255, 255, 255));
        passBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passBoxFocusGained(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(187, 187, 187));
        jLabel2.setText("Password:");

        createAccount.setForeground(new java.awt.Color(187, 187, 187));
        createAccount.setText("Create Account");
        createAccount.setBorder(null);
        createAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                createAccountMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                createAccountMouseEntered(evt);
            }
        });
        createAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(187, 187, 187));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setMinimumSize(new java.awt.Dimension(10, 16));
        jSeparator1.setPreferredSize(new java.awt.Dimension(10, 16));
        jSeparator1.setSize(new java.awt.Dimension(10, 16));

        jCheckBox1.setBackground(new java.awt.Color(0, 0, 0));
        jCheckBox1.setForeground(new java.awt.Color(187, 187, 187));
        jCheckBox1.setText("Remember Me");

        recoverPassword.setForeground(new java.awt.Color(187, 187, 187));
        recoverPassword.setText("Recover Password");
        recoverPassword.setBorder(null);
        recoverPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                recoverPasswordMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                recoverPasswordMouseEntered(evt);
            }
        });
        recoverPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recoverPasswordActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(119, 27, 27));

        loginButton.setBackground(new java.awt.Color(255, 255, 255));
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        background.setBackground(new java.awt.Color(0, 0, 0));
        background.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/natora/resources/LoginBackground.png"))); // NOI18N
        background.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 770, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(123, 123, 123)
                            .add(jLabel4))
                        .add(layout.createSequentialGroup()
                            .add(131, 131, 131)
                            .add(jLabel1)
                            .add(6, 6, 6)
                            .add(userBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 307, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createSequentialGroup()
                            .add(244, 244, 244)
                            .add(passBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 307, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createSequentialGroup()
                            .add(131, 131, 131)
                            .add(createAccount)
                            .add(12, 12, 12)
                            .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(12, 12, 12)
                            .add(recoverPassword)
                            .add(91, 91, 91)
                            .add(loginButton))
                        .add(layout.createSequentialGroup()
                            .add(129, 129, 129)
                            .add(jCheckBox1))
                        .add(layout.createSequentialGroup()
                            .add(129, 129, 129)
                            .add(errorLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 414, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createSequentialGroup()
                            .add(175, 175, 175)
                            .add(jLabel2))
                        .add(background, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 770, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 350, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 0, Short.MAX_VALUE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(6, 6, 6)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(6, 6, 6)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(layout.createSequentialGroup()
                                    .add(6, 6, 6)
                                    .add(jLabel1))
                                .add(userBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(6, 6, 6)
                            .add(passBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(6, 6, 6)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(createAccount)
                                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(recoverPassword)
                                .add(loginButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(2, 2, 2)
                            .add(jCheckBox1)
                            .add(6, 6, 6)
                            .add(errorLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createSequentialGroup()
                            .add(199, 199, 199)
                            .add(jLabel2))
                        .add(background))
                    .add(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userBoxFocusGained
        errorLabel.setText("");
    }//GEN-LAST:event_userBoxFocusGained

    private void passBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passBoxFocusGained
        errorLabel.setText("");
    }//GEN-LAST:event_passBoxFocusGained

    private void createAccountMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createAccountMouseExited
        createAccount.setForeground(new Color(187, 187, 187));
    }//GEN-LAST:event_createAccountMouseExited

    private void createAccountMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createAccountMouseEntered
        createAccount.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_createAccountMouseEntered

    private void createAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountActionPerformed
        try {
            String url = "http://challengercity.com/Challenger_City_V3/User_Creation.html";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_createAccountActionPerformed

    private void recoverPasswordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recoverPasswordMouseExited
        recoverPassword.setForeground(new Color(187, 187, 187));
    }//GEN-LAST:event_recoverPasswordMouseExited

    private void recoverPasswordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recoverPasswordMouseEntered
        recoverPassword.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_recoverPasswordMouseEntered

    private void recoverPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recoverPasswordActionPerformed
        try {
            String url = "http://challengercity.com/Challenger_City_V3/Password_Recovery.html";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_recoverPasswordActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed

        errorLabel.setText("");
        String url = "http://challengercity.com/PHP/Login.php?username=" + userBox.getText() + "&email=" + userBox.getText() + "&password=" + passBox.getText();
        String response1 = urlToString(url, "");
        String response2 = response1.replaceAll("\"", "");
        String[] response3 = response2.split("=");
        if (response3[0].equals("1")) {
            Thread startThread = new Thread(new StartThread("startThread", response3[1], "")); // Directory
            myFrame.dispose();
            System.out.println("[Login] Starting Natora");
        } else {
            errorLabel.setText("Incorrect Username and Password.");
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    public static String urlToString(String targetURL, String urlParameters)
      {
        URL url;
        HttpURLConnection connection = null;  
        try {
          //Create connection
          url = new URL(targetURL);
          connection = (HttpURLConnection)url.openConnection();
          connection.setRequestMethod("POST");
          connection.setRequestProperty("Content-Type", 
               "application/x-www-form-urlencoded");

          connection.setRequestProperty("Content-Length", "" + 
                   Integer.toString(urlParameters.getBytes().length));
          connection.setRequestProperty("Content-Language", "en-US");  

          connection.setUseCaches (false);
          connection.setDoInput(true);
          connection.setDoOutput(true);

          //Send request
          DataOutputStream wr = new DataOutputStream (
                      connection.getOutputStream ());
          wr.write(urlParameters.getBytes("UTF-8"));
          wr.flush ();
          //Get Response    
          InputStream is = connection.getInputStream();
          BufferedReader rd = new BufferedReader(new InputStreamReader(is));
          String line;
          StringBuffer response = new StringBuffer(); 
          while((line = rd.readLine()) != null) {
            response.append(line);
            response.append('\r');
          }
          rd.close();
          return response.toString();

        } catch (Exception e) {

          e.printStackTrace();
          return null;

        } finally {

          if(connection != null) {
            connection.disconnect(); 
          }
        }
      }
    
//    public File setUpDirectory() {
//        File dir = null;
//        if (isMac()) { // Get Main Path
//            dir = new File("/Users/"+System.getProperty("user.name")+"/Library/Application Support/Natora");
//        } else if (isWindows()) {
//            dir = new File("C:/Users/"+System.getProperty("user.name")+"/AppData/Roaming/Natora");
//        } else {
//            System.out.println("[NatoraLogin] Operating system not valid");
//        }
//        
//        dir.mkdir(); // Make Directory
//        
//        // Download natives
//        
//        if (isMac()) { // Load Libraries
//            System.load(dir+"/natives/libjinput-osx.jnilib");
//            System.load(dir+"/natives/liblwjgl.jnilib");
//            System.load(dir+"/natives/openal.dylib");
//        } else if (isWindows()) {
//            System.load(dir+"/natives/jinput-dx8_64.dll");
//            System.load(dir+"/natives/jinput-dx8.dll");
//            System.load(dir+"/natives/jinput-raw_64.dll");
//            System.load(dir+"/natives/jinput-raw.dll");
//            System.load(dir+"/natives/lwjgl.dll");
//            System.load(dir+"/natives/lwjgl64.dll");
//            System.load(dir+"/natives/OpenAL32.dll");
//            System.load(dir+"/natives/OpenAL64.dll");
//        } else {
//            System.out.println("[NatoraLogin] Operating system not valid");
//        }
//        
//        return dir;
//    }
    
    public static boolean isWindows() {
        String os = System.getProperty("os.name").toLowerCase();
        // windows
        return (os.indexOf("win") >= 0);
    }

    public static boolean isMac() {
        String os = System.getProperty("os.name").toLowerCase();
        // Mac
        return (os.indexOf("mac") >= 0);
    }
    
    class StartThread implements Runnable {

	Thread runner;
        String username;
        String dir;
	public StartThread() {
	}
	public StartThread(String threadName, String username, String dir) {
                this.username=username;
		runner = new Thread(this, threadName);
                this.dir=dir;
		runner.start();
	}
	public void run() {
            try {
                Thread.sleep(500);
            } catch (Exception ex) {}
            Natora nt = new Natora(username, dir);
  
	}
    }
    
    public javax.swing.JFrame myFrame;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton createAccount;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passBox;
    private javax.swing.JButton recoverPassword;
    private javax.swing.JTextField userBox;
    // End of variables declaration//GEN-END:variables
}
